(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{288:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_22-07-20"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-07-20"}},[t._v("#")]),t._v(" 22-07-20")]),t._v(" "),s("h2",{attrs:{id:"firebase로-github-인증-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#firebase로-github-인증-2"}},[t._v("#")]),t._v(" Firebase로 GitHub 인증 - 2")]),t._v(" "),s("p",[t._v("이어서 알아볼 사항("),s("RouterLink",{attrs:{to:"/til/22-07/22-07-19.html"}},[t._v("07-19")]),t._v("에서)")],1),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("read:user")]),t._v("를 통해서 제공 받은 정보를 저장하는 방법이 있는지 확인해보기(사용자 표시 이름 등)")]),t._v(" "),s("ul",[s("li",[s("s",[t._v("수동 저장 과정으로 진행해보면 될까?")]),t._v(" "),s("ul",[s("li",[s("s",[t._v("일단 "),s("code",[t._v("tokenResponse")]),t._v("에 "),s("code",[t._v("displayName")]),t._v("으로 얻어올 수는 있음")])])])]),t._v(" "),s("li",[s("s",[t._v("Authentication이 아닌 "),s("code",[t._v("Firestore Database")]),t._v("에 저장하는 방식으로 진행해야 하나?")])]),t._v(" "),s("li",[t._v("혹은 매번 GitHub API에 요청해야 할까? ✅")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("signInWithRedirect")]),t._v("로는 제대로 진행이 되지 않음 ✅")])])]),t._v(" "),s("h2",{attrs:{id:"사용자-정보-저장-및-불러오기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#사용자-정보-저장-및-불러오기"}},[t._v("#")]),t._v(" 사용자 정보 저장 및 불러오기")]),t._v(" "),s("p",[t._v("✅ "),s("code",[t._v("addScope")]),t._v("로 스코프 추가 하지 않아도 기본 email정보는 가져옴(email로 Firebase Authentication에 사용자를 구분하여 등록)")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/78826879/180180910-9021d6e9-f68a-4c3e-86f1-b3db4fb5615d.png",alt:"가입시 요구 정보 화면"}})]),t._v(" "),s("p",[s("a",{attrs:{href:"https://firebase.google.com/docs/auth/web/manage-users?hl=ko#get_a_users_provider-specific_profile_information",target:"_blank",rel:"noopener noreferrer"}},[t._v("공식문서"),s("OutboundLink")],1),t._v("대로 저장된 유저 정보를 가져와보면 아래 정보만 확인 가능하다.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userAuth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onAuthStateChanged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("auth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("providerData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("profile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sign-in provider: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("providerId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  Provider-specific UID: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  Name: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("displayName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  Email: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  Photo URL: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("photoURL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 이하 생략")]),t._v("\n")])])]),s("p",[t._v("하지만 "),s("code",[t._v("displayName")]),t._v("을 미설정한 사람(나😇)의 경우에는 "),s("code",[t._v("null")]),t._v("로 표시된다."),s("br"),t._v("\n위 정보로는 유저의 로그인ID(이메일x)나 URL을 알 수 없다.")]),t._v(" "),s("p",[t._v("저장된 정보중 "),s("code",[t._v("UID")]),t._v("와 "),s("code",[t._v("GitHub API")]),t._v("를 이용해서 해당 정보를 가져오자 ("),s("a",{attrs:{href:"https://docs.github.com/en/rest/users/users#get-the-authenticated-user",target:"_blank",rel:"noopener noreferrer"}},[t._v("공식문서"),s("OutboundLink")],1),t._v(")")]),t._v(" "),s("h3",{attrs:{id:"github-api로-유저-정보-가져오기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-api로-유저-정보-가져오기"}},[t._v("#")]),t._v(" GitHub API로 유저 정보 가져오기")]),t._v(" "),s("p",[s("code",[t._v("https://api.github.com/user/${uid}")]),t._v(" 로 아래 방법과 같이 요청할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("https://api.github.com/user/")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("uid"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("headers")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Accept")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/json"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Authorization")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" token \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("토큰은 "),s("code",[t._v("user.accessToken")]),t._v("으로 가져올 수 있다.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userAuth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onAuthStateChanged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("auth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const userAuth = await onAuthStateChanged(auth, ({token}) => { 도 가능하다.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" token "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("accessToken \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 이하 생략")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://docs.github.com/en/github-ae@latest/developers/apps/building-github-apps/rate-limits-for-github-apps#user-to-server-requests",target:"_blank",rel:"noopener noreferrer"}},[t._v("user-to-server요청"),s("OutboundLink")],1),t._v("이므로 시간당 15,000회로 제한된다.")]),t._v(" "),s("p",[t._v("GitHub Users API를 이용하여 아래와 같은 응답을 받을 수 있다.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "login": "octocat",\n  "id": 1,\n  "node_id": "MDQ6VXNlcjE=",\n  "avatar_url": "https://github.com/images/error/octocat_happy.gif",\n  "gravatar_id": "",\n  "url": "https://api.github.com/users/octocat",\n  "html_url": "https://github.com/octocat",\n  "followers_url": "https://api.github.com/users/octocat/followers",\n  "following_url": "https://api.github.com/users/octocat/following{/other_user}",\n  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",\n  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",\n  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",\n  "organizations_url": "https://api.github.com/users/octocat/orgs",\n  "repos_url": "https://api.github.com/users/octocat/repos",\n  "events_url": "https://api.github.com/users/octocat/events{/privacy}",\n  "received_events_url": "https://api.github.com/users/octocat/received_events",\n  "type": "User",\n  "site_admin": false,\n  "name": "monalisa octocat",\n  "company": "GitHub",\n  "blog": "https://github.com/blog",\n  "location": "San Francisco",\n  "email": "octocat@github.com",\n  "hireable": false,\n  "bio": "There once was...",\n  "twitter_username": "monatheoctocat",\n  "public_repos": 2,\n  "public_gists": 1,\n  "followers": 20,\n  "following": 0,\n  "created_at": "2008-01-14T04:33:35Z",\n  "updated_at": "2008-01-14T04:33:35Z",\n  "private_gists": 81,\n  "total_private_repos": 100,\n  "owned_private_repos": 100,\n  "disk_usage": 10000,\n  "collaborators": 8,\n  "two_factor_authentication": true,\n  "plan": {\n    "name": "Medium",\n    "space": 400,\n    "private_repos": 20,\n    "collaborators": 0\n  }\n}\n')])])]),s("p",[s("code",[t._v("login")]),t._v(", "),s("code",[t._v("html_url")]),t._v(", "),s("code",[t._v("avatar_url")]),t._v("등을 활용할 수 있게 되었다.")]),t._v(" "),s("h2",{attrs:{id:"firebase로-github-인증-signinwithredirect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#firebase로-github-인증-signinwithredirect"}},[t._v("#")]),t._v(" Firebase로 GitHub 인증 (signInWithRedirect)")]),t._v(" "),s("p",[t._v("signInWithPopup과 달리 "),s("code",[t._v("signInWithRedirect")]),t._v("가 동작하지 않았는데, 이 문제는 이 이슈("),s("a",{attrs:{href:"https://github.com/firebase/firebase-js-sdk/issues/3004",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Firebase Auth is no longer working in incognito mode")]),s("OutboundLink")],1),t._v(")와 관련 있었던 것으로 생각된다.")]),t._v(" "),s("p",[t._v("실제로 시크릿모드가 아닌 환경에서는 잘 동작했다..😇\n일단 현재로서 사용자가 시크릿 모드를 이용하지 않도록 안내하는 방법 보다는 popup으로 로그인을 연결하는 게 나은 방법일 것 같다.")])])}),[],!1,null,null,null);s.default=e.exports}}]);